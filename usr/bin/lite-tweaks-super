#! /bin/bash
#--------------------------------------------------------------------------------------------------------
# Name: Lite Tweaks Super
# Description: A collection of tools to tweak your Linux Lite system.
# Authors: Misko_2083, John Jenkins, Jerry Bezencon, Ralphy
# Website: https://www.linuxliteos.com
#--------------------------------------------------------------------------------------------------------

# Get input from a previous file
FRM="$@"

# Check if the input is correct and populate array C
echo "$FRM" | grep "APTGETCLEAN" > /dev/null
if [ $? = 0 ];then
ARRAYC+=('CLEAN')
fi

echo $FRM | grep "AUTOREMOVE" > /dev/null
if [ $? = 0 ];then
ARRAYC+=('REMOVE')
fi

echo $FRM | grep "DBROWSER" > /dev/null
if [ $? = 0 ];then
ARRAYC+=('BROWSER')
fi

echo $FRM | grep "HOSTNAME" > /dev/null
if [ $? = 0 ];then
ARRAYC+=('HNAME')
fi

echo $FRM| grep "FILESIZES" > /dev/null
if [ $? = 0 ];then
ARRAYC+=('FILES')
fi

echo $FRM | grep "REMKERNELS" > /dev/null
if [ $? = 0 ];then
ARRAYC+=('KERNELS')
fi

echo $FRM | grep "LOGARCHIVES" > /dev/null
if [ $? = 0 ];then
ARRAYC+=('LARCHIVES')
fi

echo $FRM | grep "EDNUMLOCK" > /dev/null
if [ $? = 0 ];then
ARRAYC+=('NUMLOCK')
fi

echo $FRM | grep "RESIDCONFIG" > /dev/null
if [ $? = 0 ];then
ARRAYC+=('RCONFIG')
fi

echo $FRM | grep "FIXBOOTUP" > /dev/null
if [ $? = 0 ];then
ARRAYC+=('FIXBOOTUP')
fi

echo $FRM | grep "CLEARMEM" > /dev/null
if [ $? = 0 ];then
ARRAYC+=('CLEARMEM')
fi

echo $FRM | grep "FIXAPT" > /dev/null
if [ $? = 0 ];then
ARRAYC+=('FIXAPT')
fi

# Call the zenity window icon.
ic="/usr/share/icons/zenity-llcc.png"

CLEAN() {
echo "#Cleaning the package cache..."
    sleep 1
    apt-get clean
        if [ "${PIPESTATUS[0]}" -ne "0" ]; then
        echo "#Error..."
        sleep 1
            zenity --error --width="260" --height="80" --title="    Error" \
                   --text="\nAn error occurred while cleaning the package cache!"
        else
            zenity --info --width="260" --height="80" --title="  Lite Tweaks" --text="\nThe package cache has been cleared!"
        fi
}

LARCHIVES() {
echo "#Deleting archived logs..."
sleep 1
    find /var/log \( -name '*.gz' -o -name '*.0' -o -name '*.1' \) -exec rm -rf {} \;
        if [ "${PIPESTATUS[0]}" -ne "0" ]; then
        echo "#Error..."
        sleep 1
            zenity --error --width="260" --height="80" --title="    Error" \
                   --text="\nAn error occurred while deleting archived logs!"
        else
            zenity --info --width="260" --height="80" --title="  Lite Tweaks" --text="\nThe archived logs have been cleared!"
        fi
}

NUMLOCK() {
echo "#Configuring Numlock at Login..."
EDNL=$(zenity --width="240" --height=150 --window-icon=$ic --title=" Numlock at Login" \
--list --radiolist --text "Select an Option:" \
--column "Select" --column "Option" \
FALSE "Enable" \
FALSE "Disable")

if [[ "$EDNL" =~ "Enable" ]]; then
    sed -i "s/off/on/g" /etc/lightdm/lightdm.conf

    PROCEED=$(zenity --info --title="   Numlock at Login" --window-icon=$ic --text=" \nNumlock has been Enabled."; echo $?)
    if [ ${PROCEED} -eq 1 ]; then
       zenity --info --title=" Numlock at Login" --window-icon=$ic --text="\nNumlock has been Enabled."
    fi

elif [[ "$EDNL" =~ "Disable" ]]; then
    sed -i "s/on/off/g" /etc/lightdm/lightdm.conf

    PROCEED=$(zenity --info --title="Numlock at Login" --window-icon=$ic --text="Numlock has been Disabled."; echo $?)
    if [ ${PROCEED} -eq 1 ]; then
       zenity --info --title="Numlock at Login" --window-icon=$ic --text="Numlock has been Disabled."
    fi
    else zenity --info --title="Numlock at Login" --text="\nNo option was selected. No changes have been made."
fi
}

REMOVE() {
    echo "#Removing unneeded packages, please wait..."
    sleep 1
        apt-get autoclean -y && apt-get autoremove -y
        if [ "${PIPESTATUS[0]}" -ne "0" ]; then
            echo "# Error..."
            sleep 1
            zenity --error --width="260" --height="80" --title="    Error"
                   --text="\nAn error occurred while removing unneeded packages!"
        else
            zenity --info --width="260" --height="80" --title="  Lite Tweaks" --text="\nUnneeded packages have been removed!"
        fi
}

HNAME() {
    current_hostname=$(cat /etc/hostname)

    echo "#Changing hostname. Please wait..." && sleep 1
    echo "#Changing hostname... ${current_hostname}"

    while (true); do

    newhost=$(zenity --entry --width="280" --window-icon=$ic --ok-label="Change" --title=" Change Hostname" \
                     --text="Your computer's current hostname is:  ' ${current_hostname} '\n\nEnter the desired new hostname (e.g.: MyLitePC-01) \nbelow and click 'Change' to proceed. \n \nNote: The hostname must not be empty, or start with \nhashtags, or contain whitespaces.\n" --entry-text="${current_hostname}")
        
        if [ "${PIPESTATUS[0]}" -ne "0" ]; then
            return
        fi
    
    # If hostname is only blank spaces or starts with a hashtag, warn and loop
    echo "$newhost" | egrep "^[[:space:]]*$|^#|[[:space:]]" >/dev/null
    if [ $? = 0 ]; then
        zenity --warning --width="340" --height="60" --ok-label="Got it!" \
        --title=" Hostname not changed" --text="\nThe new Hostname must not be empty, or start with hashtags, or contain whitespaces.\n \nHostname cannot be changed!"
        continue

    # If old hostname and new hostname are the same, warn and loop
    elif [ $newhost = $current_hostname ]; then
         zenity --info --width="340" --height="60" --ok-label="Got it!" \
                --title=" Hostname not changed" --text="\nThe Hostname did not change... nothing to do here!"
        continue

    else
        sed -i "s/$current_hostname/$newhost/g" /etc/hosts
        sed -i "s/$current_hostname/$newhost/g" /etc/hostname

    fi
     
    
    while (true); do
    # Reboot dialogue
    echo "#Changing hostname to ' $newhost ' " && sleep 1
    title=" Hostname changed"
    exit_type=`zenity  --width="380" --height="200" --cancel-label="Revert Changes" --text="Hostname has been changed to: <b>$newhost</b>\n\nYou must reboot your computer for changes to take effect." --title="$title" --list --radiolist --column="Select" \
                       --column="Exit Type" --column="Description" \
                       TRUE "Reboot" "Reboot your computer"\
                       FALSE "Shutdown" "Shutdown your computer"\
                       FALSE "Continue" "Continue using your computer" `

    # User must select a target type (Check if they cancelled)
    if [ ! "$exit_type" ]; then
        echo "#Reverting hostname changes to... ${current_hostname} " && sleep 1
        sed -i "s/$newhost/$current_hostname/g" /etc/hosts
        sed -i "s/$newhost/$current_hostname/g" /etc/hostname
        zenity --info --width="260" --height="60" --title=" Changes reverted" --text="\nHostname has been reverted to <b>$current_hostname</b>. \nThis task will now exit."
        return
    fi

    # Action to perform by user
    if [ "$exit_type" = "Reboot" ]
        then
        # Do Reboot here
        shutdown -r now
    elif [ "$exit_type" = "Shutdown" ]
        then
        # Do Shutdown here
        shutdown -h now 
    else
    # Do Cancel here
        zenity --info --width="340" --height="60" \
               --title="Hostname changed" --text="\nHostname has been changed to: <b>$newhost</b>\n\nDon't forget to reboot your computer for these changes to take effect."
    fi
    done
    return
done
}

RCONFIG() {
    echo "#Removing residual configuration files..."
    sleep 1
    dpkg --purge `dpkg -l | grep '^rc' | awk '{print $2}'` 
    if [ "${PIPESTATUS[0]}" -ne "0" ]; then
        echo "#Error..."
        sleep 1
        zenity --error --width="260" --height="80" --title="    Error" \
               --text="\nAn error occurred while removing residual configuration files!"
        else
        zenity --info --width="300" --height="80" --title="  Lite Tweaks" --text="\nResidual configuration files have been cleared!"
    fi
}

FILES() {
echo "#Getting ready..." && sleep 1 # prevent dialog overlapping 
echo "#Finding Large Files..."

# Main window dialogue
INSTALLER_TITLE="Find and list all files in your system based on specified size ranges
\nPlease note:\n
<b>•</b>  This is not a file removal tool. It is provided for informational purposes only.
<b>•</b>  Do not remove files from your system unless you are absolutely convinced that it is safe to do so.\n
Click <b>Quit</b> to exit now or <b>Continue</b> to proceed to the system scan."

# Application Name Variable
APPNAME="Find files in a range"

    zenity --question --icon-name=info --width="420" --height="200" --title="$APPNAME" --ok-label="Continue" --cancel-label="Quit" --window-icon="$ic" --text="${INSTALLER_TITLE}"
    if [ "${PIPESTATUS[0]}" -ne "0" ]; then
        return
    fi

    while (true); do echo "#Finding Large Files..." # Start scan loop
    if [ "$?" -eq "0" ]; then
    
    
# Set the file size range
scale_min=$(zenity --title="Minimum file size" --scale --text="Select the minimum file size (in MB)" --min-value=25 --max-value=5000 --value=25 --step=25)

    if [ "${PIPESTATUS[0]}" -ne "0" ]; then
        return
    fi

size_min=$(echo $scale_min | sed "s/.*/+&M/")

scale_max=$(zenity --title="Maximum file size" --scale --text="Select the maximum file size (in MB)\n• Minimum file size is $size_min\B" --min-value=25 --max-value=5000 --value=51 --step=25)

    if [ "${PIPESTATUS[0]}" -ne "0" ]; then
        return
    fi

while [ $scale_max -le $scale_min ]; do
      zenity --info --width="280" --icon-name=error --title="$APPNAME" --window-icon="$ic" --text="\nMaximum value must not be less or equal to minimum value."
            scale_max=$(zenity --title="$APPNAME" --scale --text="Select the maximum file size.\nMinimum file size is $size_min\B" --min-value=25 --max-value=5000 --value=51 --step=25)

    if [ "${PIPESTATUS[0]}" -ne "0" ]; then
        return
    fi
done

size_max=$(echo $scale_max | sed "s/.*/-&M/")

find_large=$(gksudo "stdbuf -oL /bin/bash \-c '(find / -size $size_min -size $size_max -exec du -mh {} + 2>&1 | grep [0-9][MG] | sort -h -r ) 2>&1 | tee /var/log/findfilesrange.log'" |
stdbuf -oL sed -e '/\*$/ s/^/# /p'|
zenity --progress --title="Please wait whilst your system is scanned..." --pulsate \
--width=400 --auto-close )

    if [ "${PIPESTATUS[0]}" -ne "0" ]; then
        zenity --error \
               --title="Error" --text="$APPNAME has failed."
        return
    fi
    else
        return
    fi
    echo "#Displaying scan results..." && gksu -u ${SUDO_USER:-$USER} leafpad /var/log/findfilesrange.log
    echo "#Waiting for user response..."
    # Scan loop question
    zenity --question --width="260" --title="$APPNAME" --window-icon="$ic" --text="\nWould you like to run another scan?"
    if [ "${PIPESTATUS[0]}" -ne "0" ]; then
        return
    else
        continue
    fi
done
}

KERNELS() {
# Check current Kernel
CURKERNEL=$(uname -r|sed 's/-*[a-z]//g'|sed 's/-386//g')

# Define what Kernel packages to look for
LINUXPKG="linux-(image|headers|ubuntu-modules|restricted-modules)"
METALINUXPKG="linux-(image|headers|restricted-modules)-(generic|i386|i686|server|common|rt|xen)"

# Find old Kernels
OLDKERNELS=$(dpkg -l|awk '{print $2}'|grep -E $LINUXPKG |grep -vE $METALINUXPKG|grep -v $CURKERNEL)

# Check if there are old Kernels
echo $OLDKERNELS | grep linux*
if [ "${PIPESTATUS[1]}" -ne "0" ]; then
    zenity --info --title="Results" --text="No additional kernels found"
    return
fi

# sed command adds all FALSE entries in the column 'Select'
zen=(`echo "$OLDKERNELS" | sort | sed -e  's/^/FALSE\n/'`)

# Main window dialogue
DIALOG_TEXT="This will remove kernels you no longer wish to use.
Be sure to select both the header and the image for each version of
the kernel that you wish to remove.
When you click on Remove, this window will close and the process will begin.
Click on Cancel to halt the cleaning process."

APPNAME="Kernel Cleaner"

# Call the dialog. Don't change the separator here!
okernel=$(zenity --window-icon="$ic" --list --checklist --separator=" " --width=500 --height=380   --column="Select" --column="Kernel List" \
--text="${DIALOG_TEXT}" --title="$APPNAME" --ok-label="Remove" --cancel-label="Cancel" "${zen[@]}" ) 

# If cancel is clicked then exit
if [ "${PIPESTATUS[0]}" -ne "0" ]; then 
     return
fi

# Check if anything is selected
echo $okernel | grep linux*
if [ "${PIPESTATUS[1]}" -ne "0" ]; then
    zenity --info --title='Cleaner' --text='\nNothing was selected.'
    return
fi

zenity --question --title="$APPNAME"  --text="Do you want to proceed? You are about to remove:\n$okernel"
if [ "$?" -eq "0" ]; then
      apt-get purge -y $okernel | zenity --progress --title='Removing Additional Kernels' --text='Removing...' --no-cancel --pulsate --width=400 --auto-close --auto-kill

    if [ "${PIPESTATUS[0]}" -ne "0" ]; then
        zenity --error \
               --title="Error" --text="$APPNAME has failed."
        return
    fi
    else
        return
fi

zenity --info --title="$APPNAME" --window-icon="${INSTALL_ICON}" --text="$APPNAME Complete."
    return
}

FIXBOOTUP() {
    echo "#Fixing the bootup, this might take a while..."
# Check LL version
LL_VERSION=$(awk '{print $3}' /etc/llver 2>/dev/null|| echo "Unknown")
case $LL_VERSION in
3.0)
title="Linux Lite 3.0"
black="0x000000"
white="0xffffff"
brown="0xffff00"
blue="0x000000"
;;
3.2)
title="Linux Lite 3.2"
black="0x000000"
white="0xffffff"
brown="0xffff00"
blue="0x000000"
;;
3.4)
title="Linux Lite 3.4"
black="0x000000"
white="0xffffff"
brown="0xffff00"
blue="0x000000"
;;
3.6)
title="Linux Lite 3.6"
black="0x000000"
white="0xffffff"
brown="0xffff00"
blue="0x000000"
;;
3.8)
title="Linux Lite 3.8"
black="0x000000"
white="0xffffff"
brown="0xffff00"
blue="0x000000"
;;
Unknown)
zenity --info --title="Bootup fix" --text="Unknown OS"
return
;;
*)
zenity --info --title="Lite Tweaks" --text="Bootup fix\nRelease not supported!"
return
;;
esac

sed -i "s/^title=.*$/title=$title/;s/^black=.*$/black=$black/;s/white=.*$/white=$white/;s/^brown=.*$/brown=$brown/;s/^blue=.*$/blue=$blue/" /usr/share/plymouth/themes/ubuntu-text/ubuntu-text.plymouth
    if [ "${PIPESTATUS[0]}" -ne "0" ]; then
        echo "#Error"
        sleep 1
        zenity --error \
               --title="Error" --text="There was an error while\nFixing the bootup!\nUnable to write to /etc/lsb-release"
        return
    fi

update-initramfs -u
    if [ "${PIPESTATUS[0]}" -ne "0" ]; then
        echo "#Error"
        sleep 1
        zenity --error \
               --title="Error" --text="There was an error while\nFixing the bootup!\nStatus: update-initramfs fail."
        return
    fi

echo "Linux Lite $LL_VERSION LTS \n \l" | tee /etc/issue
    if [ "${PIPESTATUS[0]}" -ne "0" ]; then
        echo "#Error"
        sleep 1
        zenity --error \
               --title="Error" --text="There was an error while\nFixing the bootup!\nUnable to write to /etc/issue"
        return
    fi

sed -i 's/^DISTRIB_DESCRIPTION=.*$/DISTRIB_DESCRIPTION="Linux Lite '"$LL_VERSION"'"/g' /etc/lsb-release
    if [ "${PIPESTATUS[0]}" -ne "0" ]; then
        echo "#Error"
        sleep 1
        zenity --error \
               --title="Error" --text="There was an error while\nFixing the bootup!\nUnable to write to /etc/lsb-release"
        return
    fi
}

CLEARMEM() {
    echo "#Freeing up system memory, please standby..."
sh -c 'echo 1 >/proc/sys/vm/drop_caches' && sh -c 'echo 2 >/proc/sys/vm/drop_caches' && sh -c 'echo 3 >/proc/sys/vm/drop_caches'
sleep 2
zenity --info --window-icon="$ic" --width="300" --height="80" --title="  Lite Tweaks" --text="\nTask freeing up system memory completed!"
}

FIXAPT() {
# Check Internet access
echo "#Stage 1: Checking for internet connection..."
    if eval "sudo -u ${SUDO_USER:-$USER} curl -sk google.com/" >> /dev/null 2>&1; then
    : # pass
    else # Prompt ERROR internet connection
        (zenity --info --ok-label="Got it!" --title="Lite Tweaks - No Internet connection detected" \
            --text="\n<b>Your computer does not seem to be connected to the internet</b> \n \nPackage System Repair requires internet access in order to fetch package lists. \nPlease check your Internet connection and try again. The task will now abort." --no-wrap)
            break               
    fi
# Stage 1
echo "#Stage 1: Repairing the package system."$"\nPlease wait, this might take some time..."
apt-get clean
cd /var/lib/apt
mv lists lists.old
mkdir -p lists/partial
apt-get clean
apt-get update
            if [ "${PIPESTATUS[0]}" -ne "0" ]; then
                    echo "#Error"
                    sleep 1
                    zenity --error --width=320 --height=80 --title="     Lite Tweaks - Error" \
               --text="\nThere was an error while fetching package lists! \n \nCheck your system log for more details."
                    break
            fi
# Stage 2
echo "#Stage 2: Repairing the package system."$"\nPlease wait, this might take some time..."

apt-get install -f
            if [ "${PIPESTATUS[0]}" -ne "0" ]; then
                    echo "#Error"
                    sleep 1
                    zenity --error --width=320 --height=80 --title="     Lite Tweaks - Error" \
                   --text="There was an error while\nInstalling partialy installed packages!"
                    return
            fi
# Stage 3    
echo "#Stage 3: Repairing the package system."$"\nPlease wait, this might take some time..."

# Recreate  /etc/apt/sources.list ...
        rm -f /etc/apt/sources.list.save && rm -f /etc/apt/sources.list && touch /etc/apt/sources.list
        echo "###### Ubuntu Main Repos" >> /etc/apt/sources.list
        add-apt-repository -y "deb http://archive.ubuntu.com/ubuntu $(lsb_release -sc) main restricted universe multiverse"
        echo $'\n' >> /etc/apt/sources.list
        echo "###### Ubuntu Update Repos" >> /etc/apt/sources.list
        add-apt-repository -y "deb http://archive.ubuntu.com/ubuntu $(lsb_release -sc)-security main restricted universe multiverse"
        add-apt-repository -y "deb http://archive.ubuntu.com/ubuntu $(lsb_release -sc)-updates main restricted universe multiverse"
        add-apt-repository -y "deb http://archive.ubuntu.com/ubuntu $(lsb_release -sc)-proposed main restricted universe multiverse"
        add-apt-repository -y "deb http://archive.ubuntu.com/ubuntu $(lsb_release -sc)-backports main restricted universe multiverse"
        echo $'\n' >> /etc/apt/sources.list
        echo "###### Ubuntu Partner Repos" >> /etc/apt/sources.list
        add-apt-repository -y "deb http://archive.canonical.com/ $(lsb_release -sc) partner"
        cp /etc/apt/sources.list /etc/apt/sources.list.save
    
    #Check the release version to reset /etc/apt/sources.list.d/linuxlite.list 
        LLVER=$(awk '{print $3}' /etc/llver) 
        RELNUM=$( echo "$LLVER / 1" | bc )  # Get Release number and remove
        REL_VERSION_NAME=(beryl citrine)    # Set Release version name array
        # Update /etc/apt/sources.list.d/linuxlite.list for BERYL
        if [ "$RELNUM" == "2"  ]; then      
            # Check for /etc/apt/sources.list.d/linuxlite.list file... 
                # If file exists:
                if  [ -f /etc/apt/sources.list.d/linuxlite.list.save ]; then
                rm -f /etc/apt/sources.list.d/linuxlite.list.save && rm -f /etc/apt/sources.list.d/linuxlite.list
                touch /etc/apt/sources.list.d/linuxlite.list
                echo "deb http://repo.linuxliteos.com/linuxlite/ ${REL_VERSION_NAME[0]} main" >> /etc/apt/sources.list.d/linuxlite.list
                cp /etc/apt/sources.list.d/linuxlite.list  /etc/apt/sources.list.d/linuxlite.list.save
    
                # If file does not exist:
                elif [ ! -f /etc/apt/sources.list.d/linuxlite.list.save ]; then
                rm -f /etc/apt/sources.list.d/linuxlite.list
                touch /etc/apt/sources.list.d/linuxlite.list
                echo "deb http://repo.linuxliteos.com/linuxlite/ ${REL_VERSION_NAME[0]} main" >> /etc/apt/sources.list.d/linuxlite.list
                cp /etc/apt/sources.list.d/linuxlite.list  /etc/apt/sources.list.d/linuxlite.list.save
                fi
        # Update /etc/apt/sources.list.d/linuxlite.list for CITRINE
        elif [ "$RELNUM" == "3"  ]; then
            # Check for /etc/apt/sources.list.d/linuxlite.list file... 
                # If file exists:
                if  [ -f /etc/apt/sources.list.d/linuxlite.list.save ]; then
                rm -f /etc/apt/sources.list.d/linuxlite.list && rm -f /etc/apt/sources.list.d/linuxlite.list.save
                touch /etc/apt/sources.list.d/linuxlite.list
                echo "deb http://repo.linuxliteos.com/linuxlite/ ${REL_VERSION_NAME[1]} main" >> /etc/apt/sources.list.d/linuxlite.list
                cp /etc/apt/sources.list.d/linuxlite.list  /etc/apt/sources.list.d/linuxlite.list.save
                echo "$RELVERSION"
    
                # If file does not exist:
                elif [ ! -f /etc/apt/sources.list.d/linuxlite.list.save ]; then
                rm -f /etc/apt/sources.list.d/linuxlite.list
                touch /etc/apt/sources.list.d/linuxlite.list
                echo "deb http://repo.linuxliteos.com/linuxlite/ ${REL_VERSION_NAME[1]} main" >> /etc/apt/sources.list.d/linuxlite.list
                cp /etc/apt/sources.list.d/linuxlite.list  /etc/apt/sources.list.d/linuxlite.list.save
                fi
        # DON'T UPDATE UNSUPPORTED RELEASE - Sample
        elif [ "$RELNUM" == "4" ]; then
                zenity --warning --width=320 --height=80 --title="     Lite Tweaks - Warning" \
                       --text="\n<b>Unsupported Linux Lite release version found</b> \n \n/etc/apt/sources.list.d/linuxlite.list and /etc/apt/sources.list.d/linuxlite.list.save files will not be reset. "
    fi
# Unset variables used during FIXAPT
unset REL_VERSION_NAME
unset RELNUM
unset LLVER
apt-get update
# Final Stage
echo "#Final Stage: Repairing the package system."$"\nCompleting Repair..."
dpkg --configure -a
}
    x=0
    for k in "${!ARRAYC[@]}"; do  x=$(( $x + 1 )); done  # Get the total number of selected items in the array

    TOTAL_LINES=$x

    printf '%s \n' "${ARRAYC[@]}"|
    while read  line
        do
            $line     # Execute functions one by one
            if [ $? = 1 ]; then
                zenity --info --title=" Lite Tweak" --text="Error:\n${line}"
            fi    
        let i++
         (( PERCENTAGE = 100 \* ${i} / ${TOTAL_LINES} ))
         echo "$PERCENTAGE"

        if [ "$PERCENTAGE" == "100" ]; then
            echo "#Done"
            sleep 1
        fi
    
    done| zenity --progress  --title="Lite Tweaks" --auto-kill --auto-close --width=300 --no-cancel

unset ARAYC
unset FRM
unset okernel
unset PROCEED
unset APPNAME
unset INSTALLER_TITLE
